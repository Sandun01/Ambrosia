Index: Ambrosia_Project/migrations/0001_initial.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Generated by Django 3.1.1 on 2020-10-10 02:04\r\n\r\nimport datetime\r\nimport django.core.validators\r\nfrom django.db import migrations, models\r\nimport django.db.models.deletion\r\n\r\n\r\nclass Migration(migrations.Migration):\r\n\r\n    initial = True\r\n\r\n    dependencies = [\r\n    ]\r\n\r\n    operations = [\r\n        migrations.CreateModel(\r\n            name='Auction_NotSoldStocks',\r\n            fields=[\r\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('MainID', models.IntegerField(blank=True)),\r\n                ('SubID', models.IntegerField(blank=True)),\r\n                ('active', models.IntegerField(blank=True, default=1)),\r\n            ],\r\n            options={\r\n                'db_table': 'Auction_NotSoldStock',\r\n            },\r\n        ),\r\n        migrations.CreateModel(\r\n            name='Auction_NotSoldStocksLog',\r\n            fields=[\r\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('LastUpdated', models.DateTimeField(auto_now_add=True)),\r\n                ('Description', models.TextField(blank=True)),\r\n            ],\r\n            options={\r\n                'db_table': 'Auction_NotSoldStockLog',\r\n            },\r\n        ),\r\n        migrations.CreateModel(\r\n            name='Auction_RePreparedNotSoldStocksDetails',\r\n            fields=[\r\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('NotSoldStockID', models.IntegerField(blank=True)),\r\n                ('PreviousSubStockMainID', models.IntegerField(blank=True)),\r\n                ('NewSubStockMainID', models.IntegerField(blank=True)),\r\n                ('LastUpdated', models.DateTimeField(auto_now_add=True)),\r\n            ],\r\n            options={\r\n                'db_table': 'Auction_NotSoldStockDetails',\r\n            },\r\n        ),\r\n        migrations.CreateModel(\r\n            name='Broker',\r\n            fields=[\r\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('name', models.CharField(max_length=50)),\r\n                ('address', models.TextField(null=True)),\r\n                ('vat_regno', models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='Vat Reg.No is Invalid', message='Vat Registration Number must contain only numbers', regex='^[0-9-]*$')])),\r\n                ('phone', models.CharField(max_length=10, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='Phone Number is Invalid', message='Phone Number must contain only numbers.', regex='^[0-9]*$'), django.core.validators.RegexValidator(code='Phone Number is Invalid', message='Phone Number length is invalid', regex='^.{10}$')])),\r\n            ],\r\n            options={\r\n                'db_table': 'Broker',\r\n            },\r\n        ),\r\n        migrations.CreateModel(\r\n            name='Buyer',\r\n            fields=[\r\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('vat_regno', models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='Vat Reg.No is Invalid', message='Vat Registration Number must contain only numbers', regex='^[0-9-]*$')])),\r\n                ('name', models.CharField(max_length=50)),\r\n            ],\r\n            options={\r\n                'db_table': 'Buyer',\r\n            },\r\n        ),\r\n        migrations.CreateModel(\r\n            name='Final_product_Main',\r\n            fields=[\r\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('subID', models.IntegerField(blank=True)),\r\n                ('totalWeight', models.FloatField(blank=True, validators=[django.core.validators.MinValueValidator(0)])),\r\n                ('date', models.DateField(default=datetime.datetime.now)),\r\n            ],\r\n            options={\r\n                'db_table': 'Final_product_Main',\r\n            },\r\n        ),\r\n        migrations.CreateModel(\r\n            name='LeafInventory',\r\n            fields=[\r\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('in_Date', models.DateField()),\r\n                ('in_Time', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23.59)])),\r\n                ('tray_Id', models.IntegerField()),\r\n                ('temp', models.FloatField()),\r\n                ('weight', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),\r\n                ('out_Date', models.DateField()),\r\n                ('out_Time', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23.59)])),\r\n            ],\r\n            options={\r\n                'db_table': 'inventory',\r\n            },\r\n        ),\r\n        migrations.CreateModel(\r\n            name='TeaGrades',\r\n            fields=[\r\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('teaGrade', models.CharField(max_length=10, unique=True)),\r\n            ],\r\n            options={\r\n                'db_table': 'tea_grade',\r\n            },\r\n        ),\r\n        migrations.CreateModel(\r\n            name='Final_product_sub',\r\n            fields=[\r\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('subID', models.IntegerField(blank=True)),\r\n                ('gradeWeight', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),\r\n                ('teaGrade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ambrosia_Project.teagrades')),\r\n            ],\r\n            options={\r\n                'db_table': 'Final_product_sub',\r\n            },\r\n        ),\r\n        migrations.CreateModel(\r\n            name='Auction_SubStock',\r\n            fields=[\r\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('SubID', models.IntegerField(blank=True)),\r\n                ('invoice', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1)])),\r\n                ('no_of_packets', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),\r\n                ('net_weight', models.FloatField(validators=[django.core.validators.MinValueValidator(1)])),\r\n                ('total_weight', models.FloatField(validators=[django.core.validators.MinValueValidator(1)])),\r\n                ('packetType', models.CharField(blank=True, choices=[('DPBS', 'DPBS'), ('MNBS', 'MNBS')], max_length=10)),\r\n                ('date_prepared', models.DateField(blank=True, default=datetime.datetime.now)),\r\n                ('status', models.CharField(blank=True, max_length=10, null=True)),\r\n                ('active', models.IntegerField(blank=True, default=1)),\r\n                ('grade', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='Ambrosia_Project.teagrades', to_field='teaGrade')),\r\n            ],\r\n            options={\r\n                'db_table': 'Auction_SubStock',\r\n            },\r\n        ),\r\n        migrations.CreateModel(\r\n            name='Auction_SoldStocks',\r\n            fields=[\r\n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\r\n                ('MainID', models.IntegerField(blank=True)),\r\n                ('SubID', models.IntegerField(blank=True)),\r\n                ('price', models.FloatField(validators=[django.core.validators.MinValueValidator(1)])),\r\n                ('total_price', models.FloatField(blank=True, validators=[django.core.validators.MinValueValidator(1)])),\r\n                ('sold_Date', models.DateField()),\r\n                ('active', models.IntegerField(blank=True, default=1)),\r\n                ('Buyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Ambrosia_Project.buyer')),\r\n            ],\r\n            options={\r\n                'db_table': 'Auction_SoldStock',\r\n            },\r\n        ),\r\n        migrations.CreateModel(\r\n            name='Auction_MainStock',\r\n            fields=[\r\n                ('SubID', models.IntegerField(blank=True, primary_key=True, serialize=False)),\r\n                ('Date', models.DateField(blank=True, default=datetime.datetime.now)),\r\n                ('total_netWeight', models.FloatField(blank=True)),\r\n                ('total_grossWeight', models.FloatField(blank=True)),\r\n                ('total_packets', models.IntegerField(blank=True)),\r\n                ('Broker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ambrosia_Project.broker')),\r\n            ],\r\n            options={\r\n                'db_table': 'Auction_MainStock',\r\n            },\r\n        ),\r\n    ]\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Ambrosia_Project/migrations/0001_initial.py	(revision 1e95b28265855e6bb4ef3b7f3d3b250d79789d85)
+++ Ambrosia_Project/migrations/0001_initial.py	(date 1602356240530)
@@ -1,176 +1,0 @@
-# Generated by Django 3.1.1 on 2020-10-10 02:04
-
-import datetime
-import django.core.validators
-from django.db import migrations, models
-import django.db.models.deletion
-
-
-class Migration(migrations.Migration):
-
-    initial = True
-
-    dependencies = [
-    ]
-
-    operations = [
-        migrations.CreateModel(
-            name='Auction_NotSoldStocks',
-            fields=[
-                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('MainID', models.IntegerField(blank=True)),
-                ('SubID', models.IntegerField(blank=True)),
-                ('active', models.IntegerField(blank=True, default=1)),
-            ],
-            options={
-                'db_table': 'Auction_NotSoldStock',
-            },
-        ),
-        migrations.CreateModel(
-            name='Auction_NotSoldStocksLog',
-            fields=[
-                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('LastUpdated', models.DateTimeField(auto_now_add=True)),
-                ('Description', models.TextField(blank=True)),
-            ],
-            options={
-                'db_table': 'Auction_NotSoldStockLog',
-            },
-        ),
-        migrations.CreateModel(
-            name='Auction_RePreparedNotSoldStocksDetails',
-            fields=[
-                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('NotSoldStockID', models.IntegerField(blank=True)),
-                ('PreviousSubStockMainID', models.IntegerField(blank=True)),
-                ('NewSubStockMainID', models.IntegerField(blank=True)),
-                ('LastUpdated', models.DateTimeField(auto_now_add=True)),
-            ],
-            options={
-                'db_table': 'Auction_NotSoldStockDetails',
-            },
-        ),
-        migrations.CreateModel(
-            name='Broker',
-            fields=[
-                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('name', models.CharField(max_length=50)),
-                ('address', models.TextField(null=True)),
-                ('vat_regno', models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='Vat Reg.No is Invalid', message='Vat Registration Number must contain only numbers', regex='^[0-9-]*$')])),
-                ('phone', models.CharField(max_length=10, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='Phone Number is Invalid', message='Phone Number must contain only numbers.', regex='^[0-9]*$'), django.core.validators.RegexValidator(code='Phone Number is Invalid', message='Phone Number length is invalid', regex='^.{10}$')])),
-            ],
-            options={
-                'db_table': 'Broker',
-            },
-        ),
-        migrations.CreateModel(
-            name='Buyer',
-            fields=[
-                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('vat_regno', models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='Vat Reg.No is Invalid', message='Vat Registration Number must contain only numbers', regex='^[0-9-]*$')])),
-                ('name', models.CharField(max_length=50)),
-            ],
-            options={
-                'db_table': 'Buyer',
-            },
-        ),
-        migrations.CreateModel(
-            name='Final_product_Main',
-            fields=[
-                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('subID', models.IntegerField(blank=True)),
-                ('totalWeight', models.FloatField(blank=True, validators=[django.core.validators.MinValueValidator(0)])),
-                ('date', models.DateField(default=datetime.datetime.now)),
-            ],
-            options={
-                'db_table': 'Final_product_Main',
-            },
-        ),
-        migrations.CreateModel(
-            name='LeafInventory',
-            fields=[
-                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('in_Date', models.DateField()),
-                ('in_Time', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23.59)])),
-                ('tray_Id', models.IntegerField()),
-                ('temp', models.FloatField()),
-                ('weight', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
-                ('out_Date', models.DateField()),
-                ('out_Time', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23.59)])),
-            ],
-            options={
-                'db_table': 'inventory',
-            },
-        ),
-        migrations.CreateModel(
-            name='TeaGrades',
-            fields=[
-                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('teaGrade', models.CharField(max_length=10, unique=True)),
-            ],
-            options={
-                'db_table': 'tea_grade',
-            },
-        ),
-        migrations.CreateModel(
-            name='Final_product_sub',
-            fields=[
-                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('subID', models.IntegerField(blank=True)),
-                ('gradeWeight', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
-                ('teaGrade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ambrosia_Project.teagrades')),
-            ],
-            options={
-                'db_table': 'Final_product_sub',
-            },
-        ),
-        migrations.CreateModel(
-            name='Auction_SubStock',
-            fields=[
-                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('SubID', models.IntegerField(blank=True)),
-                ('invoice', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1)])),
-                ('no_of_packets', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
-                ('net_weight', models.FloatField(validators=[django.core.validators.MinValueValidator(1)])),
-                ('total_weight', models.FloatField(validators=[django.core.validators.MinValueValidator(1)])),
-                ('packetType', models.CharField(blank=True, choices=[('DPBS', 'DPBS'), ('MNBS', 'MNBS')], max_length=10)),
-                ('date_prepared', models.DateField(blank=True, default=datetime.datetime.now)),
-                ('status', models.CharField(blank=True, max_length=10, null=True)),
-                ('active', models.IntegerField(blank=True, default=1)),
-                ('grade', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='Ambrosia_Project.teagrades', to_field='teaGrade')),
-            ],
-            options={
-                'db_table': 'Auction_SubStock',
-            },
-        ),
-        migrations.CreateModel(
-            name='Auction_SoldStocks',
-            fields=[
-                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
-                ('MainID', models.IntegerField(blank=True)),
-                ('SubID', models.IntegerField(blank=True)),
-                ('price', models.FloatField(validators=[django.core.validators.MinValueValidator(1)])),
-                ('total_price', models.FloatField(blank=True, validators=[django.core.validators.MinValueValidator(1)])),
-                ('sold_Date', models.DateField()),
-                ('active', models.IntegerField(blank=True, default=1)),
-                ('Buyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Ambrosia_Project.buyer')),
-            ],
-            options={
-                'db_table': 'Auction_SoldStock',
-            },
-        ),
-        migrations.CreateModel(
-            name='Auction_MainStock',
-            fields=[
-                ('SubID', models.IntegerField(blank=True, primary_key=True, serialize=False)),
-                ('Date', models.DateField(blank=True, default=datetime.datetime.now)),
-                ('total_netWeight', models.FloatField(blank=True)),
-                ('total_grossWeight', models.FloatField(blank=True)),
-                ('total_packets', models.IntegerField(blank=True)),
-                ('Broker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ambrosia_Project.broker')),
-            ],
-            options={
-                'db_table': 'Auction_MainStock',
-            },
-        ),
-    ]
