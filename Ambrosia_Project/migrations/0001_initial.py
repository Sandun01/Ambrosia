# Generated by Django 3.1.1 on 2020-10-10 02:04

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Auction_NotSoldStocks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MainID', models.IntegerField(blank=True)),
                ('SubID', models.IntegerField(blank=True)),
                ('active', models.IntegerField(blank=True, default=1)),
            ],
            options={
                'db_table': 'Auction_NotSoldStock',
            },
        ),
        migrations.CreateModel(
            name='Auction_NotSoldStocksLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LastUpdated', models.DateTimeField(auto_now_add=True)),
                ('Description', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'Auction_NotSoldStockLog',
            },
        ),
        migrations.CreateModel(
            name='Auction_RePreparedNotSoldStocksDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('NotSoldStockID', models.IntegerField(blank=True)),
                ('PreviousSubStockMainID', models.IntegerField(blank=True)),
                ('NewSubStockMainID', models.IntegerField(blank=True)),
                ('LastUpdated', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'Auction_NotSoldStockDetails',
            },
        ),
        migrations.CreateModel(
            name='Broker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('address', models.TextField(null=True)),
                ('vat_regno', models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='Vat Reg.No is Invalid', message='Vat Registration Number must contain only numbers', regex='^[0-9-]*$')])),
                ('phone', models.CharField(max_length=10, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='Phone Number is Invalid', message='Phone Number must contain only numbers.', regex='^[0-9]*$'), django.core.validators.RegexValidator(code='Phone Number is Invalid', message='Phone Number length is invalid', regex='^.{10}$')])),
            ],
            options={
                'db_table': 'Broker',
            },
        ),
        migrations.CreateModel(
            name='Buyer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vat_regno', models.CharField(blank=True, max_length=15, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='Vat Reg.No is Invalid', message='Vat Registration Number must contain only numbers', regex='^[0-9-]*$')])),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'Buyer',
            },
        ),
        migrations.CreateModel(
            name='Final_product_Main',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subID', models.IntegerField(blank=True)),
                ('totalWeight', models.FloatField(blank=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('date', models.DateField(default=datetime.datetime.now)),
            ],
            options={
                'db_table': 'Final_product_Main',
            },
        ),
        migrations.CreateModel(
            name='LeafInventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_Date', models.DateField()),
                ('in_Time', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23.59)])),
                ('tray_Id', models.IntegerField()),
                ('temp', models.FloatField()),
                ('weight', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('out_Date', models.DateField()),
                ('out_Time', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23.59)])),
            ],
            options={
                'db_table': 'inventory',
            },
        ),
        migrations.CreateModel(
            name='TeaGrades',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teaGrade', models.CharField(max_length=10, unique=True)),
            ],
            options={
                'db_table': 'tea_grade',
            },
        ),
        migrations.CreateModel(
            name='Final_product_sub',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subID', models.IntegerField(blank=True)),
                ('gradeWeight', models.FloatField(validators=[django.core.validators.MinValueValidator(0)])),
                ('teaGrade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ambrosia_Project.teagrades')),
            ],
            options={
                'db_table': 'Final_product_sub',
            },
        ),
        migrations.CreateModel(
            name='Auction_SubStock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SubID', models.IntegerField(blank=True)),
                ('invoice', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('no_of_packets', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('net_weight', models.FloatField(validators=[django.core.validators.MinValueValidator(1)])),
                ('total_weight', models.FloatField(validators=[django.core.validators.MinValueValidator(1)])),
                ('packetType', models.CharField(blank=True, choices=[('DPBS', 'DPBS'), ('MNBS', 'MNBS')], max_length=10)),
                ('date_prepared', models.DateField(blank=True, default=datetime.datetime.now)),
                ('status', models.CharField(blank=True, max_length=10, null=True)),
                ('active', models.IntegerField(blank=True, default=1)),
                ('grade', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='Ambrosia_Project.teagrades', to_field='teaGrade')),
            ],
            options={
                'db_table': 'Auction_SubStock',
            },
        ),
        migrations.CreateModel(
            name='Auction_SoldStocks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MainID', models.IntegerField(blank=True)),
                ('SubID', models.IntegerField(blank=True)),
                ('price', models.FloatField(validators=[django.core.validators.MinValueValidator(1)])),
                ('total_price', models.FloatField(blank=True, validators=[django.core.validators.MinValueValidator(1)])),
                ('sold_Date', models.DateField()),
                ('active', models.IntegerField(blank=True, default=1)),
                ('Buyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Ambrosia_Project.buyer')),
            ],
            options={
                'db_table': 'Auction_SoldStock',
            },
        ),
        migrations.CreateModel(
            name='Auction_MainStock',
            fields=[
                ('SubID', models.IntegerField(blank=True, primary_key=True, serialize=False)),
                ('Date', models.DateField(blank=True, default=datetime.datetime.now)),
                ('total_netWeight', models.FloatField(blank=True)),
                ('total_grossWeight', models.FloatField(blank=True)),
                ('total_packets', models.IntegerField(blank=True)),
                ('Broker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ambrosia_Project.broker')),
            ],
            options={
                'db_table': 'Auction_MainStock',
            },
        ),
    ]
